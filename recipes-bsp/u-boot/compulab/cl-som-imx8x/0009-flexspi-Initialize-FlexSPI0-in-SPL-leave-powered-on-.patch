From 4998a10c9d673428160b68ba5cae9ba165b6478b Mon Sep 17 00:00:00 2001
From: Igor Derzhavets <igor.derzhavets@compulab.co.il>
Date: Mon, 22 Jul 2019 15:50:43 +0300
Subject: [PATCH 09/23] flexspi: Initialize FlexSPI0 in SPL, leave powered on
 before U-Boot

Signed-off-by: Igor Derzhavets <igor.derzhavets@compulab.co.il>
---
 board/compulab/cl-som-imx8x/spl.c | 36 +++++++++++++++++++++++++++++++++++-
 1 file changed, 35 insertions(+), 1 deletion(-)

diff --git a/board/compulab/cl-som-imx8x/spl.c b/board/compulab/cl-som-imx8x/spl.c
index 9235dca84f..79c9684dd7 100644
--- a/board/compulab/cl-som-imx8x/spl.c
+++ b/board/compulab/cl-som-imx8x/spl.c
@@ -176,16 +176,50 @@ void spl_board_init(void)
 #if defined(CONFIG_SPL_SPI_SUPPORT)
 	sc_ipc_t ipcHndl = 0;
 	sc_err_t err = SC_ERR_NONE;
+	sc_rm_pt_t ap_part;
+	sc_rm_mr_t fspi_mr;
 
 	ipcHndl = gd->arch.ipc_channel_handle;
+
 	if (sc_rm_is_resource_owned(ipcHndl, SC_R_FSPI_0) == SC_TRUE) {
 		if ((err = sc_pm_set_resource_power_mode(ipcHndl, SC_R_FSPI_0, SC_PM_PW_MODE_ON)) != SC_ERR_NONE) {
 			debug("Warning: failed to turn on FSPI0 [ SC_ERR = %d ]\n", err);
 		}
+		else {
+			puts("Success: FlexSPI0 is ON\n");
+		}
 	}
 	else
 	{
 		puts("Warning: FSPI0 isn't owned\n");
+		if ((err = sc_rm_set_subsys_rsrc_movable(ipcHndl, SC_R_FSPI_0, SC_TRUE) != SC_ERR_NONE)) {
+			debug("Error: failed to make FSPI0 movable [ SC_ERR = %d ]\n", err);
+			return;
+		}
+
+		if ((err = sc_rm_get_partition(ipcHndl, &ap_part) != SC_ERR_NONE)) {
+			debug("Error: Get AP partition ID [ SC_ERR = %d ]\n", err);
+		}
+		else {
+			debug("Success: AP partition ID = %d\n", ap_part);
+		}
+
+		if ((err = sc_rm_assign_resource(ipcHndl, ap_part, SC_R_FSPI_0) != SC_ERR_NONE)) {
+			debug("Error: Cannot assign FSPI0 to AP partition [ SC_ERR = %d ]\n", err);
+		}
+
+		for (sc_pad_t i = SC_P_QSPI0A_DATA0; i <= SC_P_COMP_CTL_GPIO_1V8_3V3_QSPI0B; i++) {
+			if ((err = sc_rm_assign_pad(ipcHndl, ap_part, i) != SC_ERR_NONE)) {
+				debug("Error: Cannot assign FSPI0 pad [%d] to AP partition [ SC_ERR = %d ]\n", i, err);
+			}
+		}
+
+		if ((err = sc_pm_set_resource_power_mode(ipcHndl, SC_R_FSPI_0, SC_PM_PW_MODE_ON)) != SC_ERR_NONE) {
+			debug("Warning: failed to turn on FSPI0 [ SC_ERR = %d ]\n", err);
+		}
+		else {
+			puts("Success: FSPI0 is ON\n");
+		}
 	}
 	
 #endif
@@ -197,7 +231,7 @@ void spl_board_init(void)
 
 void spl_board_prepare_for_boot(void)
 {
-#if defined(CONFIG_SPL_SPI_SUPPORT)
+#if 0
 	sc_ipc_t ipcHndl = 0;
 	sc_err_t err = SC_ERR_NONE;
 
-- 
2.11.0

