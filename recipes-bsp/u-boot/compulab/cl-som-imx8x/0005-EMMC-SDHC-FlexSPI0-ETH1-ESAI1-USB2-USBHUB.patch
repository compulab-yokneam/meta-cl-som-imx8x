From e8f5932f6e14dfb7a2409a09fd1ad2b9114894e7 Mon Sep 17 00:00:00 2001
From: Igor Derzhavets <igor.derzhavets@compulab.co.il>
Date: Thu, 1 Aug 2019 15:08:22 +0300
Subject: [PATCH 05/23] EMMC, SDHC, FlexSPI0, ETH1(ESAI1), USB2, USBHUB

Signed-off-by: Igor Derzhavets <igor.derzhavets@compulab.co.il>
---
 arch/arm/dts/cl-som-imx8x.dts              |  91 +++-------------
 board/compulab/cl-som-imx8x/cl-som-imx8x.c | 166 +++++++++++++++++++++--------
 board/compulab/cl-som-imx8x/spl.c          |  31 ++++--
 include/configs/cl-som-imx8x.h             |  28 +++--
 4 files changed, 176 insertions(+), 140 deletions(-)

diff --git a/arch/arm/dts/cl-som-imx8x.dts b/arch/arm/dts/cl-som-imx8x.dts
index 0f6abf79ec..183bc35745 100644
--- a/arch/arm/dts/cl-som-imx8x.dts
+++ b/arch/arm/dts/cl-som-imx8x.dts
@@ -24,11 +24,6 @@
 	model = "CompuLab CL-SOM-iMX8X";
 	compatible = "fsl,imx8qxp-mek", "fsl,imx8qxp";
 
-	aliases {
-		i2c4 = &bb_i2c1;
-		i2c5 = &mfi_i2c1;
-	};
-
 	chosen {
 		bootargs = "console=ttyLP0,115200 earlycon=lpuart32,0x5a060000,115200";
 		stdout-path = &lpuart0;
@@ -56,7 +51,7 @@
 			regulator-name = "usb_otg1_vbus";
 			regulator-min-microvolt = <5000000>;
 			regulator-max-microvolt = <5000000>;
-			gpio = <&pca9557_b 2 GPIO_ACTIVE_HIGH>;
+			//gpio = <&pca9557_b 2 GPIO_ACTIVE_HIGH>;
 			enable-active-high;
 		};
 
@@ -84,7 +79,6 @@
 		pinctrl_fec1: fec1grp {
 			fsl,pins = <
 				SC_P_COMP_CTL_GPIO_1V8_3V3_ENET_ENETB0_PAD	0x000014a0
-				SC_P_COMP_CTL_GPIO_1V8_3V3_ENET_ENETB1_PAD	0x000014a0
 				SC_P_ENET0_MDC_CONN_ENET0_MDC			0x06000020
 				SC_P_ENET0_MDIO_CONN_ENET0_MDIO			0x06000020
 				SC_P_ENET0_RGMII_TX_CTL_CONN_ENET0_RGMII_TX_CTL	0x00000060
@@ -104,18 +98,19 @@
 
 		pinctrl_fec2: fec2grp {
 			fsl,pins = <
-				SC_P_ESAI0_SCKR_CONN_ENET1_RGMII_TX_CTL		0x00000060
-				SC_P_ESAI0_FSR_CONN_ENET1_RGMII_TXC		0x00000060
-				SC_P_ESAI0_TX4_RX1_CONN_ENET1_RGMII_TXD0	0x00000060
-				SC_P_ESAI0_TX5_RX0_CONN_ENET1_RGMII_TXD1	0x00000060
-				SC_P_ESAI0_FST_CONN_ENET1_RGMII_TXD2		0x00000060
-				SC_P_ESAI0_SCKT_CONN_ENET1_RGMII_TXD3		0x00000060
-				SC_P_ESAI0_TX0_CONN_ENET1_RGMII_RXC		0x00000060
-				SC_P_SPDIF0_TX_CONN_ENET1_RGMII_RX_CTL		0x00000060
-				SC_P_SPDIF0_RX_CONN_ENET1_RGMII_RXD0		0x00000060
-				SC_P_ESAI0_TX3_RX2_CONN_ENET1_RGMII_RXD1	0x00000060
-				SC_P_ESAI0_TX2_RX3_CONN_ENET1_RGMII_RXD2	0x00000060
-				SC_P_ESAI0_TX1_CONN_ENET1_RGMII_RXD3		0x00000060
+				SC_P_COMP_CTL_GPIO_1V8_3V3_ENET_ENETB1_PAD	0x000014a0
+				SC_P_ESAI0_SCKR_CONN_ENET1_RGMII_TX_CTL		0x00000040
+				SC_P_ESAI0_FSR_CONN_ENET1_RGMII_TXC		0x00000040
+				SC_P_ESAI0_TX4_RX1_CONN_ENET1_RGMII_TXD0	0x00000040
+				SC_P_ESAI0_TX5_RX0_CONN_ENET1_RGMII_TXD1	0x00000040
+				SC_P_ESAI0_FST_CONN_ENET1_RGMII_TXD2		0x00000040
+				SC_P_ESAI0_SCKT_CONN_ENET1_RGMII_TXD3		0x00000040
+				SC_P_ESAI0_TX0_CONN_ENET1_RGMII_RXC		0x00000040
+				SC_P_SPDIF0_TX_CONN_ENET1_RGMII_RX_CTL		0x00000040
+				SC_P_SPDIF0_RX_CONN_ENET1_RGMII_RXD0		0x00000040
+				SC_P_ESAI0_TX3_RX2_CONN_ENET1_RGMII_RXD1	0x00000040
+				SC_P_ESAI0_TX2_RX3_CONN_ENET1_RGMII_RXD2	0x00000040
+				SC_P_ESAI0_TX1_CONN_ENET1_RGMII_RXD3		0x00000040
 			>;
 		};
 
@@ -228,14 +223,6 @@
 				SC_P_QSPI0A_SS0_B_LSIO_QSPI0A_SS0_B	0x0600004c
 				SC_P_QSPI0A_SS1_B_LSIO_QSPI0A_SS1_B	0x0600004c
 				SC_P_QSPI0A_SCLK_LSIO_QSPI0A_SCLK	0x0600004c
-				SC_P_QSPI0B_SCLK_LSIO_QSPI0B_SCLK	0x0600004c
-				SC_P_QSPI0B_DATA0_LSIO_QSPI0B_DATA0	0x0600004c
-				SC_P_QSPI0B_DATA1_LSIO_QSPI0B_DATA1	0x0600004c
-				SC_P_QSPI0B_DATA2_LSIO_QSPI0B_DATA2	0x0600004c
-				SC_P_QSPI0B_DATA3_LSIO_QSPI0B_DATA3	0x0600004c
-				SC_P_QSPI0B_DQS_LSIO_QSPI0B_DQS		0x0600004c
-				SC_P_QSPI0B_SS0_B_LSIO_QSPI0B_SS0_B	0x0600004c
-				SC_P_QSPI0B_SS1_B_LSIO_QSPI0B_SS1_B	0x0600004c
 			>;
 		};
 
@@ -317,13 +304,12 @@
 	pinctrl-0 = <&pinctrl_flexspi0>;
 	status = "okay";
 
-	flash0: mt35xu512aba@0 {
+	w25q16cl@0 {
 		reg = <0>;
 		#address-cells = <1>;
 		#size-cells = <1>;
 		compatible = "spi-flash";
 		spi-max-frequency = <29000000>;
-		spi-nor,ddr-quad-read-dummy = <8>;
 	};
 };
 
@@ -335,53 +321,6 @@
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_lpi2c1>;
 	status = "okay";
-
-	pca9646_switch: mux@71 {
-		compatible = "nxp,pca9646", "fsl,imx-virt-i2c-mux";
-		reg = <0x71>;
-		u-boot,i2c-offset-len = <0>;
-		virtual-bus-seq = <12>;
-		#address-cells = <1>;
-		#size-cells = <0>;
-
-		bb_i2c1: i2c@0 {
-			#address-cells = <1>;
-			#size-cells = <0>;
-			reg = <0x0>;
-		};
-
-		mfi_i2c1: i2c@1 {
-			#address-cells = <1>;
-			#size-cells = <0>;
-			reg = <0x1>;
-		};
-
-		i2cexp1_i2c1: i2c@2 {
-			#address-cells = <1>;
-			#size-cells = <0>;
-			reg = <0x2>;
-		};
-
-		i2cexp2_i2c1: i2c@3 {
-			#address-cells = <1>;
-			#size-cells = <0>;
-			reg = <0x3>;
-
-			pca9557_a: gpio@1a {
-				compatible = "nxp,pca9557";
-				reg = <0x1a>;
-				gpio-controller;
-				#gpio-cells = <2>;
-			};
-
-			pca9557_b: gpio@1d {
-				compatible = "nxp,pca9557";
-				reg = <0x1d>;
-				gpio-controller;
-				#gpio-cells = <2>;
-			};
-		};
-	};
 };
 
 &i2c0_mipi_lvds0 {
diff --git a/board/compulab/cl-som-imx8x/cl-som-imx8x.c b/board/compulab/cl-som-imx8x/cl-som-imx8x.c
index 7b12f2b20e..7a4f98493b 100644
--- a/board/compulab/cl-som-imx8x/cl-som-imx8x.c
+++ b/board/compulab/cl-som-imx8x/cl-som-imx8x.c
@@ -39,10 +39,10 @@ DECLARE_GLOBAL_DATA_PTR;
 
 
 #define ENET_INPUT_PAD_CTRL	((SC_PAD_CONFIG_OD_IN << PADRING_CONFIG_SHIFT) | (SC_PAD_ISO_OFF << PADRING_LPCONFIG_SHIFT) \
-						| (SC_PAD_28FDSOI_DSE_18V_10MA << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
+						| (SC_PAD_28FDSOI_DSE_DV_HIGH << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
 
 #define ENET_NORMAL_PAD_CTRL	((SC_PAD_CONFIG_NORMAL << PADRING_CONFIG_SHIFT) | (SC_PAD_ISO_OFF << PADRING_LPCONFIG_SHIFT) \
-						| (SC_PAD_28FDSOI_DSE_18V_10MA << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
+						| (SC_PAD_28FDSOI_DSE_DV_HIGH << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
 
 #define FSPI_PAD_CTRL	((SC_PAD_CONFIG_NORMAL << PADRING_CONFIG_SHIFT) | (SC_PAD_ISO_OFF << PADRING_LPCONFIG_SHIFT) \
 						| (SC_PAD_28FDSOI_DSE_DV_HIGH << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
@@ -60,12 +60,50 @@ static iomux_cfg_t uart0_pads[] = {
 	SC_P_UART0_RX | MUX_PAD_CTRL(UART_PAD_CTRL),
 	SC_P_UART0_TX | MUX_PAD_CTRL(UART_PAD_CTRL),
 };
+  
+static iomux_cfg_t flexspi0_pads[] = {
+	SC_P_QSPI0A_DATA0 | MUX_PAD_CTRL(FSPI_PAD_CTRL),
+	SC_P_QSPI0A_DATA1 | MUX_PAD_CTRL(FSPI_PAD_CTRL),
+	SC_P_QSPI0A_DATA2 | MUX_PAD_CTRL(FSPI_PAD_CTRL),
+	SC_P_QSPI0A_DATA3 | MUX_PAD_CTRL(FSPI_PAD_CTRL),
+	SC_P_QSPI0A_SS0_B | MUX_PAD_CTRL(FSPI_PAD_CTRL),
+	SC_P_QSPI0A_SCLK  | MUX_PAD_CTRL(FSPI_PAD_CTRL)
+};
 
 static void setup_iomux_uart(void)
 {
 	imx8_iomux_setup_multiple_pads(uart0_pads, ARRAY_SIZE(uart0_pads));
 }
 
+static void setup_iomux_flxspi0(void)
+{
+	imx8_iomux_setup_multiple_pads(flexspi0_pads, ARRAY_SIZE(flexspi0_pads));
+}
+
+int gpio_init_by_sc(const sc_pad_t padNum, const uint8_t muxMode, const sc_pad_config_t padCfg, const sc_pad_iso_t padIso)
+{
+	sc_ipc_t ipcHndl = 0;
+	sc_err_t sciErr = 0;
+
+	uint8_t  mux = 0;
+	sc_pad_t muxPad = padNum;
+	sc_pad_config_t muxPadCfg = 0;
+	sc_pad_iso_t muxPadIso = 0;
+
+	ipcHndl = gd->arch.ipc_channel_handle;
+
+	sciErr = sc_pad_get_mux(ipcHndl, muxPad, &mux, &muxPadCfg, &muxPadIso);
+	if (sciErr)
+		return ERR_INVAL;
+
+	debug("sc_pad_get_mux: mux = 0x%02X, pad = 0x%d, padCfg = 0x%02X, padIso = 0x%02X\n", mux, muxPad, muxPadCfg, muxPadIso);
+
+	sciErr = sc_pad_set_mux(ipcHndl, padNum, muxMode, padCfg, padIso);
+	if (sciErr)
+		return ERR_INVAL;
+	return 0;
+}
+
 int board_early_init_f(void)
 {
 	sc_ipc_t ipcHndl = 0;
@@ -201,6 +239,12 @@ int board_mmc_getcd(struct mmc *mmc)
 #ifdef CONFIG_FEC_MXC
 #include <miiphy.h>
 
+static iomux_cfg_t pad_enet_mdio[] = {
+	/* Shared MDIO */
+	SC_P_ENET0_MDC | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
+	SC_P_ENET0_MDIO | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
+};
+
 static iomux_cfg_t pad_enet1[] = {
 	SC_P_SPDIF0_TX | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
 	SC_P_SPDIF0_RX | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_INPUT_PAD_CTRL),
@@ -214,10 +258,7 @@ static iomux_cfg_t pad_enet1[] = {
 	SC_P_ESAI0_FST  | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
 	SC_P_ESAI0_SCKT | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
 	SC_P_ESAI0_FSR  | MUX_MODE_ALT(3) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-
-	/* Shared MDIO */
-	SC_P_ENET0_MDC | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_MDIO | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
+	SC_P_QSPI0B_SS0_B	| MUX_MODE_ALT(4) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL), /* Mux for RESET,  GPIO3 IO23 */
 };
 
 static iomux_cfg_t pad_enet0[] = {
@@ -233,40 +274,58 @@ static iomux_cfg_t pad_enet0[] = {
 	SC_P_ENET0_RGMII_TXD2 | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
 	SC_P_ENET0_RGMII_TXD3 | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
 	SC_P_ENET0_RGMII_TXC | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-
-	/* Shared MDIO */
-	SC_P_ENET0_MDC | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
-	SC_P_ENET0_MDIO | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL),
+	SC_P_QSPI0B_DQS  | MUX_MODE_ALT(4) | MUX_PAD_CTRL(ENET_NORMAL_PAD_CTRL), /* Mux for RESET,  GPIO3 IO22 */
 };
 
 static void setup_iomux_fec(void)
 {
-	if (0 == CONFIG_FEC_ENET_DEV)
-		imx8_iomux_setup_multiple_pads(pad_enet0, ARRAY_SIZE(pad_enet0));
-	else
-		imx8_iomux_setup_multiple_pads(pad_enet1, ARRAY_SIZE(pad_enet1));
+	imx8_iomux_setup_multiple_pads(pad_enet_mdio, ARRAY_SIZE(pad_enet_mdio));
+	imx8_iomux_setup_multiple_pads(pad_enet0, ARRAY_SIZE(pad_enet0));
+	imx8_iomux_setup_multiple_pads(pad_enet1, ARRAY_SIZE(pad_enet1));
 }
 
+static int gpio_req_out(struct gpio_desc *desc, const char *name, const char *label, const unsigned int val)
+{
+	int ret;
+	if (desc == NULL)
+		return ERR_INVAL;
+
+	ret = dm_gpio_lookup_name(name, desc);
+	if (ret)
+		return ret;
+
+	ret = dm_gpio_request(desc,label);
+	if (ret)
+		return ret;
+
+	return 0;
+}
 static void enet_device_phy_reset(void)
 {
 	struct gpio_desc desc;
 	int ret;
 
-	/* The BB_PER_RST_B will reset the ENET1 PHY */
-	if (0 == CONFIG_FEC_ENET_DEV) {
-		ret = dm_gpio_lookup_name("gpio@1a_4", &desc);
-		if (ret)
-			return;
+	gpio_init_by_sc(SC_P_QSPI0B_DQS, 4, 0, 0);
+	ret = gpio_req_out(&desc, "gpio3_22","enet0_reset", 1);
+	if (ret)
+		return;
 
-		ret = dm_gpio_request(&desc, "enet0_reset");
-		if (ret)
-			return;
+	dm_gpio_set_dir_flags(&desc, GPIOD_IS_OUT);
+	dm_gpio_set_value(&desc, 0);
+	udelay(50);
+	dm_gpio_set_value(&desc, 1);
 
-		dm_gpio_set_dir_flags(&desc, GPIOD_IS_OUT);
-		dm_gpio_set_value(&desc, 0);
-		udelay(50);
-		dm_gpio_set_value(&desc, 1);
-	}
+	/* The board has a long delay for this reset to become stable */
+	mdelay(200);
+
+	ret = gpio_req_out(&desc, "gpio3_23","enet1_reset", 1);
+	if (ret)
+		return;
+
+	dm_gpio_set_dir_flags(&desc, GPIOD_IS_OUT);
+	dm_gpio_set_value(&desc, 0);
+	udelay(50);
+	dm_gpio_set_value(&desc, 1);
 
 	/* The board has a long delay for this reset to become stable */
 	mdelay(200);
@@ -279,20 +338,37 @@ int board_eth_init(bd_t *bis)
 
 	printf("[%s] %d\n", __func__, __LINE__);
 
-	if (CONFIG_FEC_ENET_DEV) {
-		if (!power_domain_lookup_name("conn_enet1", &pd))
-			power_domain_on(&pd);
-	} else {
-		if (!power_domain_lookup_name("conn_enet0", &pd))
-			power_domain_on(&pd);
-	}
+	if (!power_domain_lookup_name("conn_enet1", &pd))
+		power_domain_on(&pd);
+
+	if (!power_domain_lookup_name("conn_enet0", &pd))
+		power_domain_on(&pd);
 
 	setup_iomux_fec();
 
-	ret = fecmxc_initialize_multi(bis, CONFIG_FEC_ENET_DEV,
-		CONFIG_FEC_MXC_PHYADDR, IMX_FEC_BASE);
+	ret = fecmxc_initialize_multi(bis, 0, IMX_FEC0_PHYADDR, IMX_FEC0_BASE);
+	if (ret)
+		printf("FEC%d MXC: %s:failed\n", 0, __func__);
+
+	ret = fecmxc_initialize_multi(bis, 1, IMX_FEC1_PHYADDR, IMX_FEC1_BASE);
 	if (ret)
-		printf("FEC1 MXC: %s:failed\n", __func__);
+		printf("FEC%d MXC: %s:failed\n", 1, __func__);
+
+	return ret;
+}
+
+int flexspi0_init(void)
+{
+	int ret=0;
+	struct power_domain pd;
+
+	setup_iomux_flxspi0();
+
+	if (!power_domain_lookup_name("lsio_flexspi0", &pd))
+			ret = power_domain_on(&pd);
+
+	if (ret)
+		printf("FlexSPI0: %s:failed\n", __func__);
 
 	return ret;
 }
@@ -581,16 +657,16 @@ int board_usb_cleanup(int index, enum usb_init_type init)
 
 int board_init(void)
 {
-#ifdef CONFIG_MXC_GPIO
-	board_gpio_init();
-#endif
+//#ifdef CONFIG_MXC_GPIO
+//	board_gpio_init();
+//#endif
 
 #ifdef CONFIG_FEC_MXC
 	setup_fec(CONFIG_FEC_ENET_DEV);
 #endif
 
-#if defined(CONFIG_USB) && defined(CONFIG_USB_TCPC)
-	setup_typec();
+#if (CONFIG_SPL_SPI_SUPPORT == 1)
+	flexspi0_init();
 #endif
 
 	return 0;
@@ -599,11 +675,7 @@ int board_init(void)
 void board_quiesce_devices()
 {
 	const char *power_on_devices[] = {
-		"dma_lpuart0",
-
-		/* HIFI DSP boot */
-		"audio_sai0",
-		"audio_ocram",
+		"dma_lpuart0"
 	};
 
 	power_off_pd_devices(power_on_devices, ARRAY_SIZE(power_on_devices));
diff --git a/board/compulab/cl-som-imx8x/spl.c b/board/compulab/cl-som-imx8x/spl.c
index 05442bcc32..9235dca84f 100644
--- a/board/compulab/cl-som-imx8x/spl.c
+++ b/board/compulab/cl-som-imx8x/spl.c
@@ -31,6 +31,8 @@
 
 DECLARE_GLOBAL_DATA_PTR;
 
+#define _DEBUG 1
+
 #define ESDHC_PAD_CTRL	((SC_PAD_CONFIG_OUT_IN << PADRING_CONFIG_SHIFT) | (SC_PAD_ISO_OFF << PADRING_LPCONFIG_SHIFT) \
 						| (SC_PAD_28FDSOI_DSE_DV_HIGH << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
 
@@ -38,10 +40,10 @@ DECLARE_GLOBAL_DATA_PTR;
 						| (SC_PAD_28FDSOI_DSE_DV_HIGH << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PD << PADRING_PULL_SHIFT))
 
 #define ENET_INPUT_PAD_CTRL	((SC_PAD_CONFIG_OD_IN << PADRING_CONFIG_SHIFT) | (SC_PAD_ISO_OFF << PADRING_LPCONFIG_SHIFT) \
-						| (SC_PAD_28FDSOI_DSE_18V_10MA << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
+						| (SC_PAD_28FDSOI_DSE_DV_HIGH << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
 
 #define ENET_NORMAL_PAD_CTRL	((SC_PAD_CONFIG_NORMAL << PADRING_CONFIG_SHIFT) | (SC_PAD_ISO_OFF << PADRING_LPCONFIG_SHIFT) \
-						| (SC_PAD_28FDSOI_DSE_18V_10MA << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
+						| (SC_PAD_28FDSOI_DSE_DV_HIGH << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
 
 #define FSPI_PAD_CTRL	((SC_PAD_CONFIG_NORMAL << PADRING_CONFIG_SHIFT) | (SC_PAD_ISO_OFF << PADRING_LPCONFIG_SHIFT) \
 						| (SC_PAD_28FDSOI_DSE_DV_HIGH << PADRING_DSE_SHIFT) | (SC_PAD_28FDSOI_PS_PU << PADRING_PULL_SHIFT))
@@ -173,13 +175,19 @@ void spl_board_init(void)
 {
 #if defined(CONFIG_SPL_SPI_SUPPORT)
 	sc_ipc_t ipcHndl = 0;
+	sc_err_t err = SC_ERR_NONE;
 
 	ipcHndl = gd->arch.ipc_channel_handle;
-	if (sc_rm_is_resource_owned(ipcHndl, SC_R_FSPI_0)) {
-		if (sc_pm_set_resource_power_mode(ipcHndl, SC_R_FSPI_0, SC_PM_PW_MODE_ON)) {
-			puts("Warning: failed to initialize FSPI0\n");
+	if (sc_rm_is_resource_owned(ipcHndl, SC_R_FSPI_0) == SC_TRUE) {
+		if ((err = sc_pm_set_resource_power_mode(ipcHndl, SC_R_FSPI_0, SC_PM_PW_MODE_ON)) != SC_ERR_NONE) {
+			debug("Warning: failed to turn on FSPI0 [ SC_ERR = %d ]\n", err);
 		}
 	}
+	else
+	{
+		puts("Warning: FSPI0 isn't owned\n");
+	}
+	
 #endif
 	/* DDR initialization */
 	spl_dram_init();
@@ -191,12 +199,16 @@ void spl_board_prepare_for_boot(void)
 {
 #if defined(CONFIG_SPL_SPI_SUPPORT)
 	sc_ipc_t ipcHndl = 0;
+	sc_err_t err = SC_ERR_NONE;
 
 	ipcHndl = gd->arch.ipc_channel_handle;
-	if (sc_rm_is_resource_owned(ipcHndl, SC_R_FSPI_0)) {
-		if (sc_pm_set_resource_power_mode(ipcHndl, SC_R_FSPI_0, SC_PM_PW_MODE_OFF)) {
-			puts("Warning: failed to turn off FSPI0\n");
-		}
+	if ((err = sc_pm_set_resource_power_mode(ipcHndl, SC_R_FSPI_0, SC_PM_PW_MODE_OFF)) != SC_ERR_NONE)
+	{
+		debug("Warning: failed to turn off FSPI0 [ SC_ERR = %d ]\n", err);
+	}
+	else
+	{
+		puts("Success: FSPI0 is OFF\n");
 	}
 #endif
 }
@@ -230,3 +242,4 @@ void board_init_f(ulong dummy)
 	board_init_r(NULL, 0);
 }
 
+#define _DEBUG 0
\ No newline at end of file
diff --git a/include/configs/cl-som-imx8x.h b/include/configs/cl-som-imx8x.h
index d2dd955cde..d783f00ceb 100644
--- a/include/configs/cl-som-imx8x.h
+++ b/include/configs/cl-som-imx8x.h
@@ -64,6 +64,10 @@
 
 #endif
 
+#ifndef CONFIG_SPL_SPI_SUPPORT
+#define CONFIG_SPL_SPI_SUPPORT 1
+#endif
+
 #define CONFIG_REMAKE_ELF
 
 #define CONFIG_BOARD_EARLY_INIT_F
@@ -94,7 +98,6 @@
 #define CONFIG_FSL_HSIO
 #ifdef CONFIG_FSL_HSIO
 #define CONFIG_PCIE_IMX8X
-#define CONFIG_CMD_PCI
 #define CONFIG_PCI
 #define CONFIG_PCI_PNP
 #define CONFIG_PCI_SCAN_SHOW
@@ -120,15 +123,19 @@
 #define CONFIG_PHY_ATHEROS
 
 /* ENET0 connects AR8031 on CPU board, ENET1 connects to base board and MUX with ESAI, default is ESAI */
-#define CONFIG_FEC_ENET_DEV 0
+#define CONFIG_FEC_ENET_DEV 1
+
+#define IMX_FEC0_BASE			0x5B040000
+#define IMX_FEC1_BASE			0x5B050000
+
+#define IMX_FEC0_PHYADDR		1
+#define IMX_FEC1_PHYADDR		0
 
 #if (CONFIG_FEC_ENET_DEV == 0)
-#define IMX_FEC_BASE			0x5B040000
-#define CONFIG_FEC_MXC_PHYADDR          0x0
+#define CONFIG_FEC_MXC_PHYADDR          IMX_FEC0_PHYADDR
 #define CONFIG_ETHPRIME                 "eth0"
 #elif (CONFIG_FEC_ENET_DEV == 1)
-#define IMX_FEC_BASE			0x5B050000
-#define CONFIG_FEC_MXC_PHYADDR          0x1
+#define CONFIG_FEC_MXC_PHYADDR          IMX_FEC1_PHYADDR
 #define CONFIG_ETHPRIME                 "eth1"
 #endif
 
@@ -370,12 +377,15 @@
 #define CONFIG_IMX_SMMU
 
 /* MT35XU512ABA1G12 has only one Die, so QSPI0 B won't work */
+#ifndef CONFIG_FSL_FSPI
+#define CONFIG_FSL_FSPI 1
+#endif
 #ifdef CONFIG_FSL_FSPI
 #define CONFIG_SF_DEFAULT_BUS		0
 #define CONFIG_SF_DEFAULT_CS		0
 #define CONFIG_SF_DEFAULT_SPEED	40000000
-#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_0
-#define FSL_FSPI_FLASH_SIZE		SZ_64M
+#define CONFIG_SF_DEFAULT_MODE		SPI_MODE_3
+#define FSL_FSPI_FLASH_SIZE		SZ_16M
 #define FSL_FSPI_FLASH_NUM		1
 #define FSPI0_BASE_ADDR			0x5d120000
 #define FSPI0_AMBA_BASE			0
@@ -392,7 +402,9 @@
 
 #define CONFIG_CMD_USB_MASS_STORAGE
 #define CONFIG_USB_GADGET_MASS_STORAGE
+#ifndef CONFIG_USB_FUNCTION_MASS_STORAGE
 #define CONFIG_USB_FUNCTION_MASS_STORAGE
+#endif
 
 #define CONFIG_USB_EHCI_HCD
 #endif
-- 
2.11.0

