#!/bin/bash

# Constants #
BBLAYERS_CONF=conf/bblayers.conf
BB_CL_CONF_DONE=conf/bb_cl_conf.done
LOCAL_CONF=conf/local.conf

# Functions #
get_meta_compulab() {
meta_cpl_dir="../sources/meta-compulab"
branch="devel"
meta_url="https://github.com/compulab-yokneam/meta-compulab"
if [[ -d ${meta_cpl_dir} ]];then
git -C ${meta_cpl_dir} remote update
git -C ${meta_cpl_dir} pull
else
git clone -b ${branch} ${meta_url} ${meta_cpl_dir}
fi
rm -rf ${meta_cpl_dir}/recipes-xfce
rm -rf ${meta_cpl_dir}/recipes-browser
}

# Modify local.conf
mod_local() {
cat << eof | tee -a ${LOCAL_CONF} > /dev/null
CORE_IMAGE_EXTRA_INSTALL+=" cl-stest cl-uboot cl-deploy cl-camera mipi-panel-wa "
CORE_IMAGE_EXTRA_INSTALL+=" memtester htop iotop tmux iperf3 dhcp-client u-boot-fw-utils "
LICENSE_FLAGS_WHITELIST = "commercial"
# Add Chromium
IMAGE_INSTALL_append =										\\
	"\${@bb.utils.contains('DISTRO_FEATURES', 'wayland', ' chromium-ozone-wayland',		\\
		bb.utils.contains('DISTRO_FEATURES',     'x11', ' chromium-x11',		\\
		'', d), d)									\\
	}"
eof
}

# Main #

# Modify bblayers.conf
mod_bblayer() {
# Get CompuLab Main meta layer
get_meta_compulab
# A mandatory bsp layer: kernel
cat << eof | tee -a ${BBLAYERS_CONF} > /dev/null
BBLAYERS += " \\
	\${BSPDIR}/sources/meta-compulab-bsp/meta-cl-som-imx8x \\
	\${BSPDIR}/sources/meta-compulab \\
"
eof
}

CWD=$(pwd)
PROGNAME=${BASH_SOURCE[0]}
[ $(basename -- $BASH_SOURCE) == $(basename -- $0) ] && EXIT="exit" || EXIT="return"

if [[ $(id -u) -eq 0 ]]; then
    echo "ERROR: do not use the BSP as root. Exiting..."
    ${EXIT}
fi

if ([ ! -f ${BBLAYERS_CONF} ] || [ ! -f ${LOCAL_CONF} ]);then
cat << eom
    Warning: Files ${BBLAYERS_CONF} and ${LOCAL_CONF} not found.
    Make sure that the scritp issued at a correct location.
eom
    ${EXIT} 2
fi

[[ -n ${FORCE} ]] && rm -rf ${BB_CL_CONF_DONE}

if [ -f ${BB_CL_CONF_DONE} ];then
cat << eom
    Note: Already issued.
    Nothing to be done.
eom
    ${EXIT} 0
fi

eval $(awk '(/MACHINE|DISTRO/)&&(gsub(/'"'"'/,"")&&($0=$1"="$NF))' ORS=";" ${LOCAL_CONF})

cat << eom
    Prepare: ${MACHINE}:${DISTRO} ...
eom

mod_local
mod_bblayer

cat << eom
    Note: Files ${BBLAYERS_CONF} and ${LOCAL_CONF} updated successfully.
eom

cat << eom > ${BB_CL_CONF_DONE}
$(date)
eom

${EXIT} 0
